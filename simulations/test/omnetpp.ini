[General]
network = flora.simulations.test.TestNetwork
sim-time-limit = 1000s
simtime-resolution = -11
**.vector-recording = true

###########################
# General
###########################
rng-class = "cMersenneTwister"
**.ipv4Delayer.config = xmldoc("cloudDelays.xml")

# Radio and Medium
*.LoRaMedium.pathLoss.typename = "FreeSpacePathLoss" # "LoRaLogNormalShadowing"
*.LoRaMedium.propagation.typename = "DtSIoTPropagation" # SatellitePropagation
*.LoRaMedium.**.maxTransmissionDuration = 4s
*.LoRaMedium.**.minInterferenceTime = 0s
**.displayAddresses = false

# Visualizer
*.visualizer.*.radioVisualizer.displayAntennaLobes = true
*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.movementTrailLineWidth = 1
*.visualizer.*.mobilityVisualizer.trailLength = 3000
#*.visualizer.*.mobilityVisualizer.displayVelocities = true

# LoRa MAC class
**.mac.classUsed = "S"    # "A" or "B" or "S"
**.mac.beaconStart = 1


###########################
# LoRa GW (satellites)
###########################
**.nrOfGW = 1
**.loRaGW[*].**.initFromDisplayString = false

# LoRa Radio
*.loRaGW[*].LoRaGWNic.radio.separateTransmissionParts = false
*.loRaGW[*].LoRaGWNic.radio.separateReceptionParts = false

*.loRaGW[*].LoRaGWNic.radio.antenna.gain = 12dB
*.loRaGW[*].LoRaGWNic.radio.antenna.maxGain = 12dB
*.loRaGW[*].LoRaGWNic.radio.antenna.minGain = 1dB
*.loRaGW[*].LoRaGWNic.radio.antenna.beamWidth = 120deg
*.loRaGW[*].LoRaGWNic.radio.antenna.mobility.offsetHeading = 120deg
*.loRaGW[*].LoRaGWNic.radio.iAmGateway = true

#*.loRaGW[*].LoRaGWNic.mac.classUsed = "S"   # "A" or "B" 
*.loRaGW[*].LoRaGWNic.mac.beaconTimer = 128 # the period of beaconMessage sent from GW
*.loRaGW[*].LoRaGWNic.mac.pingNumber = 4    # power of 2

# Application
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetHandler.destAddresses = "networkServer"
**.loRaGW[*].packetHandler.destPort = 1000
**.loRaGW[*].packetHandler.localPort = 2000

# Mobility
*.loRaGW[*].mobility.faceForward = false
*.loRaGW[*].mobility.updateInterval = 20s

# constellation general parameters, argument of perigee is set to 0
*.loRaGW[*].NoradModule.baseYear = 20
*.loRaGW[*].NoradModule.baseDay = 0.8194444

*.loRaGW[*].NoradModule.satName = "FLoRaSat"
*.loRaGW[*].NoradModule.planes = 1
*.loRaGW[*].NoradModule.satPerPlane = 1
*.loRaGW[*].NoradModule.epochYear = 20
*.loRaGW[*].NoradModule.epochDay = 0.8194444
*.loRaGW[*].NoradModule.eccentricity = 0.000001
*.loRaGW[*].NoradModule.inclination = 98
*.loRaGW[*].NoradModule.altitude = 600

*.loRaGW[0].NoradModule.raan = 340
*.loRaGW[0].NoradModule.meanAnomaly = 280
*.loRaGW[0].*.satIndex = 0


###########################
# LoRa Nodes (devices on ground)
###########################
**.nrOfNodes = 10

# Application
**.numberOfPacketsToSend = 0  #${numberOfPAckets = 200..5000 step 200}  # 0 means infinite number of packets
**.timeToFirstPacket = 10s    #time to first packet can be set at any moment
**.timeToNextPacket = 180s    #time to next packet must follow the 1% duty cycle, you can find the limit time on SimpleLoRaApp
**.alohaChannelModel = false
**.usingAck = false            # work with an ACK DL or not

# LoRa Central Frequency
*.loRaNodes[*].**.initialLoRaCF = 868MHz
# LoRa Bandwith
*.loRaNodes[*].**.initialLoRaBW = 125 kHz
# LoRa Transmission Power
*.loRaNodes[*].**.initialLoRaTP = 14dBm
# LoRa Spreading Factor (9-12)
*.loRaNodes[*].**.initialLoRaSF = 12
# LoRa Coding Rate
*.loRaNodes[*].**.initialLoRaCR = 4
# LoRa payload
*.loRaNodes[*].**.payloadSize = 10B

# LoRa Other params
*.loRaNodes[*].**.initFromDisplayString = false
*.loRaNodes[*].**.evaluateADRinNode = false
#*.loRaNodes[*].LoRaNic.mac.classUsed = "S"

# LoRa Node and Gateway Radio and Medium
*.loRaNodes[*].*.radio.separateTransmissionParts = false
*.loRaNodes[*].*.radio.separateReceptionParts = false
*.loRaNodes[*].*.radio.radioMediumModule = "LoRaMedium"

# Power
*.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
*.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
*.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# Mobility
# Random uniform disk initilization is the default mobility
*.loRaNodes[*].mobility.radius = 15.0
*.loRaNodes[*].mobility.centerLatitude = -16.0
*.loRaNodes[*].mobility.centerLongitude = -55.0


###########################
# Ground Stations
###########################
**.nrOfGS = 1

*.groundStation[*].groundForwarder.numUdpApps = 1
*.groundStation[*].groundForwarder.destAddresses = "networkServer"
#*.groundStation[*].groundForwarder.localAddresses = "groundForwarder"
*.groundStation[*].groundForwarder.destPort = 1000
*.groundStation[*].groundForwarder.localPort = 2000
*.groundStation[*].groundForwarder.indexNumber = 0


*.groundStation[*].dummyNic.bitrate = 100Mbps

*.groundStation[0].mobility.latitude = -33.4944
*.groundStation[0].mobility.longitude = -70.7412
*.groundStation[0].cityName = "Santiago"


###########################
# Network Server
###########################
*.networkServer.numApps = 1
*.networkServer.**.evaluateADRinServer = false
*.networkServer.**.WorkWithAck = true # this parameter can be deleted later on by just checking the msg type on UL
*.networkServer.app[0].typename = "LoRaNetworkServerApp"
*.networkServer.app[0].destAddresses = "groundStation[0]"
#*.networkServer.app[0].localAddress = "networkServer"
*.networkServer.app[0].destPort = 2000
*.networkServer.app[0].localPort = 1000
*.networkServer.app[0].adrMethod = ${"avg"}


