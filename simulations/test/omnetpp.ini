[General]
network = flora.simulations.test.TestNetwork
repeat = 1
sim-time-limit = 410.4s  # 5792s period
simtime-resolution = -11

**.loRaGW[*].**.numCollisions.scalar-recording = true
**.loRaGW[*].**.rcvBelowSensitivity.scalar-recording = true
**.loRaGW[*].**.ClassS_Slot_Status.vector-recording = true

**.bin-recording = false
**.param-recording = false
**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false

###########################
# General
###########################
rng-class = "cMersenneTwister"
**.ipv4Delayer.config = xmldoc("cloudDelays.xml")

# number of nodes
**.nrOfNodes = ${N=3..1403 step 20}   # OCI estimation pahse
experiment-label = "OCItest"
measurement-label = "N=${N}"
replication-label = "#${repetition}"

# Medium
*.LoRaMedium.**.maxTransmissionDuration = 4s
*.LoRaMedium.**.minInterferenceTime = 0s
**.displayAddresses = false

# LoRa MAC class
**.mac.classUsed = "S"    # "A" or "B" or "S"
**.mac.beaconStart = 2
**.beaconPeriodTime = 408.5
**.maxToA = 0.856

**.transmitter.communicationRange = 2830km

# Visualizer
*.visualizer.*.radioVisualizer.displayAntennaLobes = false
*.visualizer.*.dataLinkVisualizer.displayLinks = false
*.visualizer.*.mobilityVisualizer.displayMovementTrails = false
*.visualizer.*.mobilityVisualizer.movementTrailLineWidth = 1
*.visualizer.*.mobilityVisualizer.trailLength = 3000
#*.visualizer.*.mobilityVisualizer.displayVelocities = true

###########################
# LoRa GW (satellites)
###########################
**.nrOfGW = 1
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].**.displaySpanArea = false
**.loRaGW[*].**.effectiveSlant = 1744

# Mobility
*.loRaGW[*].mobility.faceForward = false
*.loRaGW[*].mobility.updateInterval = 10s

# constellation general parameters
*.loRaGW[*].NoradModule.baseYear = 20
*.loRaGW[*].NoradModule.baseDay = 0.8312315  # 0.8194444 0.8252315

*.loRaGW[*].NoradModule.satName = "FLoRaSat"
*.loRaGW[*].NoradModule.planes = 1
*.loRaGW[*].NoradModule.satPerPlane = 1
*.loRaGW[*].NoradModule.epochYear = 20
*.loRaGW[*].NoradModule.epochDay = 0.8194444
*.loRaGW[*].NoradModule.eccentricity = 0.000001
*.loRaGW[*].NoradModule.inclination = 98
*.loRaGW[*].NoradModule.altitude = 600
*.loRaGW[*].NoradModule.argPerigee = 0

*.loRaGW[0].NoradModule.raan = 340
*.loRaGW[0].NoradModule.meanAnomaly = 280
*.loRaGW[0].**.satIndex = 0


# LoRa GW Radio
*.loRaGW[*].LoRaGWNic.radio.separateTransmissionParts = false
*.loRaGW[*].LoRaGWNic.radio.separateReceptionParts = false

*.loRaGW[*].LoRaGWNic.radio.antenna.gain = 5dB
*.loRaGW[*].LoRaGWNic.radio.iAmGateway = true

*.loRaGW[*].LoRaGWNic.mac.pingNumber = 4    # power of 2
*.loRaGW[*].LoRaGWNic.mac.beaconSF = 11
*.loRaGW[*].LoRaGWNic.mac.beaconCR = 4
*.loRaGW[*].LoRaGWNic.mac.beaconBW = 125000

# Application
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetHandler.destAddresses = "networkServer"
**.loRaGW[*].packetHandler.destPort = 1000
**.loRaGW[*].packetHandler.localPort = 2000


###########################
# LoRa Nodes (devices on ground)
###########################

# Mobility
# Random uniform disk initilization is the default mobility
*.loRaNodes[*].mobility.deploymentRadius = 475
*.loRaNodes[*].mobility.centerLatitude = -15.6547
*.loRaNodes[*].mobility.centerLongitude = -57.025

# LoRa Radio
*.loRaNodes[*].**.initialLoRaCF = 868MHz
*.loRaNodes[*].**.initialLoRaBW = 125 kHz
*.loRaNodes[*].**.initialLoRaTP = 14dBm
*.loRaNodes[*].**.initialLoRaSF = 11
*.loRaNodes[*].**.initialLoRaCR = 4
*.loRaNodes[*].**.payloadSize = 20B

# LoRa Other params
*.loRaNodes[*].**.initFromDisplayString = false
*.loRaNodes[*].**.evaluateADRinNode = false

# LoRa Node and Gateway Radio and Medium
*.loRaNodes[*].*.radio.separateTransmissionParts = false
*.loRaNodes[*].*.radio.separateReceptionParts = false
*.loRaNodes[*].*.radio.radioMediumModule = "LoRaMedium"

# Power
*.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
*.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
*.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# Application
**.numberOfPacketsToSend = 0  #${numberOfPAckets = 200..5000 step 200}  # 0 means infinite number of packets
**.timeToFirstPacket = 1s    #time to first packet can be set at any moment
**.timeToNextPacket = 180s    #time to next packet must follow the 1% duty cycle, you can find the limit time on SimpleLoRaApp
**.alohaChannelModel = false
**.usingAck = false           # work with an ACK DL or not


###########################
# Ground Stations
###########################
**.nrOfGS = 1

*.groundStation[*].groundForwarder.numUdpApps = 1
*.groundStation[*].groundForwarder.destAddresses = "networkServer"
#*.groundStation[*].groundForwarder.localAddresses = "groundForwarder"
*.groundStation[*].groundForwarder.destPort = 1000
*.groundStation[*].groundForwarder.localPort = 2000
*.groundStation[*].groundForwarder.indexNumber = 0

*.groundStation[0].mobility.latitude = -33.4944
*.groundStation[0].mobility.longitude = -70.7412
*.groundStation[0].cityName = "Santiago"


###########################
# Network Server
###########################
*.networkServer.numApps = 1
*.networkServer.**.evaluateADRinServer = false
*.networkServer.**.WorkWithAck = true # this parameter can be deleted later on by just checking the msg type on UL
*.networkServer.app[0].typename = "LoRaNetworkServerApp"
*.networkServer.app[0].destAddresses = "groundStation[0]"
#*.networkServer.app[0].localAddress = "networkServer"
*.networkServer.app[0].destPort = 2000
*.networkServer.app[0].localPort = 1000
*.networkServer.app[0].adrMethod = ${"avg"}


